/**
 * 
 */
package com.walgreens.batch.central.utility;

/**
 * @author CTS
 *
 */
public class PayOnFulfillmentQry {
	
	/*public static StringBuilder selectPOFOrder() {
		StringBuilder query=new StringBuilder();

		query.append("SELECT * FROM ( SELECT ODR.SYS_ORDER_ID  AS ORDER_ID,ODR.ORDER_PLACED_DTTM  AS ORDER_PLCD_DTTM,TO_CHAR(ODR.ORDER_PLACED_DTTM ,'yyyy-mm-dd hh:mm:ss') AS ORDER_PLACED_DTTM,ODR.ORDER_NBR  AS ORDER_NUMBER,ORD_ATTR.ENVELOPE_NUMBER  AS ENVELOPE_NUMBER,"
				+ " ODR.SYS_FULFILLMENT_VENDOR_ID AS VENDER_ID, ODR.SYS_OWNING_LOC_ID AS LOCATION_ID,ODR.ORDER_COMPLETED_DTTM   AS COMPLETED_DTTM,ODR.ORDER_SOLD_DTTM AS SOLD_DTTM,SHIPMENT.ACTUAL_SHIPPED_DTTM AS ASN_RECEIVED_DTTM,"
				+ " LOC.LOCATION_NBR AS STORE_NUMBER, rownum Row_no  FROM OM_ORDER ODR JOIN OM_ORDER_ATTRIBUTE ORD_ATTR ON ODR.SYS_ORDER_ID  = ORD_ATTR.SYS_ORDER_ID JOIN OM_LOCATION LOC ON ODR.SYS_OWNING_LOC_ID = LOC.SYS_LOCATION_ID  JOIN OM_SHIPMENT  SHIPMENT  ON SHIPMENT.SYS_ORDER_ID = ODR.SYS_ORDER_ID"
				+ " WHERE ORD_ATTR.PAY_ON_FULFILLMENT_CD= 0 AND ODR.ORDER_PLACED_DTTM  = ORD_ATTR.ORDER_PLACED_DTTM AND ODR.ORDER_PLACED_DTTM  = SHIPMENT.ORDER_PLACED_DTTM"
				+ " AND LOC.ACTIVE_CD = 1 ORDER BY ODR.SYS_ORDER_ID  )POFTAB WHERE POFTAB.Row_no >= ? AND POFTAB.Row_no  <=?");
		return query;
	}*/
	
	public static StringBuilder selectPOFOrder() {
		StringBuilder query=new StringBuilder();

		query.append("SELECT ODR.SYS_ORDER_ID   AS ORDER_ID,ODR_LINE.SYS_PRODUCT_ID   AS PRODUCT_ID , ODR.ORDER_PLACED_DTTM   AS ORDER_PLCD_DTTM, TO_CHAR(ODR.ORDER_PLACED_DTTM ,'yyyy-mm-dd hh:mm:ss') AS ORDER_PLACED_DTTM, ODR.ORDER_NBR   AS ORDER_NUMBER,ORD_ATTR.ENVELOPE_NUMBER   AS ENVELOPE_NUMBER,ODR.SYS_FULFILLMENT_VENDOR_ID  AS VENDOR_ID,"
				+ " ODR.SYS_OWNING_LOC_ID    AS LOCATION_ID, ODR.ORDER_COMPLETED_DTTM  AS COMPLETED_DTTM,ODR.ORDER_SOLD_DTTM  AS SOLD_DTTM,SHIPMENT.ACTUAL_SHIPPED_DTTM   AS ASN_RECEIVED_DTTM,LOC.LOCATION_NBR   AS STORE_NUMBER,"
				+ " ODR_LINE.FULFILLMENT_VENDOR_COST   AS VENDOR_PAYMENT_AMOUNT, ODR_LINE.FINAL_PRICE  AS CALCULATED_PRICE,ODR_LINE.QUANTITY     AS QUANTITY, ODR_LINE.LINE_SOLD_AMOUNT  AS ITEM_SOLD_AMOUNT,"
				+ " VDR.VENDOR_TYPE	 AS VENDOR_TYPE  FROM OM_ORDER ODR,OM_ORDER_ATTRIBUTE ORD_ATTR,	OM_ORDER_LINE ODR_LINE,OM_SHIPMENT SHIPMENT,OM_LOCATION LOC, OM_VENDOR VDR "
				+ " WHERE ODR.SYS_ORDER_ID  = ORD_ATTR.SYS_ORDER_ID AND ODR.ORDER_PLACED_DTTM   = ORD_ATTR.ORDER_PLACED_DTTM AND ODR.SYS_ORDER_ID   = ODR_LINE.SYS_ORDER_ID "
				+ " AND ODR.ORDER_PLACED_DTTM  = ODR_LINE.ORDER_PLACED_DTTM AND SHIPMENT.SYS_ORDER_ID   = ORD_ATTR.SYS_ORDER_ID AND SHIPMENT.ORDER_PLACED_DTTM  = ORD_ATTR.ORDER_PLACED_DTTM"
				+ " AND ODR.SYS_OWNING_LOC_ID  = LOC.SYS_LOCATION_ID AND ODR.SYS_FULFILLMENT_VENDOR_ID = VDR.SYS_VENDOR_ID AND ODR.ORDER_PLACED_DTTM        >= SYSDATE - ? AND ORD_ATTR.PAY_ON_FULFILLMENT_CD=0 ");
		return query;
	}
	
	
	/*public static StringBuilder selectOderVCRepDetail(){
		StringBuilder query=new StringBuilder();
		query.append("SELECT VC_REP.ORDER_PLACED_DTTM   AS ORDER_PLCD_DTTM, TO_CHAR(VC_REP.ORDER_PLACED_DTTM ,'yyyy-mm-dd hh:mm:ss')  AS ORDER_PLACED_DTTM, SYS_PAY_ON_ORDER_VC_ID  AS SYS_PAY_ON_ORDER_VC_ID, VC_REP.SYS_LOCATION_ID AS LOCATION_ID, VC_REP.ORDER_NBR AS ORDER_NUMBER, VC_REP.ENVELOPE_NBR AS ENVELOPE_NUMBER,"
				+ "VC_REP.SYS_PRODUCT_ID AS PRODUCT_ID,ORDER_LINE.COST   AS ITEM_COST, VC_REP.EDI_UPC AS EDI_UPC,VC_REP.QUANTITY AS QUANTITY,VC_REP.SOLD_AMOUNT AS ITEM_SOLD_AMOUNT, VC_REP.SYS_VENDOR_ID AS VENDOR_ID, VC_REP.ASN_RECEIVED_DTTM AS ASN_RECEIVED_DTTM, VC_REP.COMPLETED_DTTM AS COMPLETED_DTTM,"
				+ "VC_REP.SOLD_DTTM AS SOLD_DTTM, VC_REP.REPORTING_DTTM as REPORTING_DTTM,VC_REP.VENDOR_PAYMENT_AMOUNT AS VENDOR_PAYMENT_AMOUNT, VC_REP.CALCULATED_VENDOR_PAYMENT AS CENTRAL_CALCULATED_VEND_PMT, VC_REP.PREV_VENDOR_PAYMENT_AMOUNT AS OLD_VENDOR_ITEM_PAYMENT_AMT ,"
				+ "VC_REP.CALCULATED_PRICE AS CALCULATED_PRICE_RETAIL, VC_REP.STATUS_CD AS STATUS_CD,VC_REP.EMAIL_SENT_CD AS EMAIL_SENT_CD,VC_REP.APPROVED_BY AS APPROVED_BY,VC_REP.APPROVED_DTTM AS APPROVED_DTTM,"
				+ "VC_REP.EDI_TRANSFER_DATE AS EDI_TRANSFER_DATE,VC_REP.CREATE_USER_ID AS CREATE_USER_ID,VC_REP.CREATE_DTTM AS CREATE_DTTM,VC_REP.UPDATE_USER_ID AS UPDATE_USER_ID, VC_REP.UPDATE_DTTM AS UPDATE_DTTM, VENDOR_ATTR.COST_THRESOLD_CAP AS COST_THRESOLD_CAP,"
				+ "VENDOR_ATTR.RECALCULATE_COST_CD AS RECALCULATE_COST_CD,VEND_PROD.COST AS VEND_COST, VEND_PROD.COST_TYPE AS VEND_COST_TYPE,VEND_PROD.SHIPPING_COST AS VEND_SHIPPING_COST, VEND_PROD.SHIPPING_COST_TYPE AS VEND_SHIPPING_COST_TYPE "
				+ " FROM OM_PAY_ON_ORDER_VC_REP VC_REP,OM_VENDOR_ATTRIBUTE VENDOR_ATTR,OM_VENDOR_PRODUCT VEND_PROD,OM_ORDER ODR WHERE VC_REP.SYS_VENDOR_ID = VENDOR_ATTR.SYS_VENDOR_ID"
				+ " AND VC_REP.SYS_VENDOR_ID  = VEND_PROD.SYS_VENDOR_ID  AND UPPER(VC_REP.STATUS_CD) = UPPER('N') AND  VC_REP.ORDER_NBR = ODR.ORDER_NBR AND VEND_PROD.SYS_PRODUCT_ID  = VC_REP.SYS_PRODUCT_ID"
				+ " ORDER BY VC_REP.SYS_PAY_ON_ORDER_VC_ID ");
		return query;
		
	}*/
	
	public static StringBuilder selectOderVCRepDetail(){
		StringBuilder query=new StringBuilder();
		query.append("SELECT Vc_Rep.ORDER_PLACED_DTTM    AS Order_Plcd_Dttm,TO_CHAR(VC_REP.ORDER_PLACED_DTTM ,'yyyy-mm-dd hh:mm:ss') AS ORDER_PLACED_DTTM,  VC_REP.SYS_PAY_ON_ORDER_VC_ID  AS SYS_PAY_ON_ORDER_VC_ID,VC_REP.QUANTITY  AS QUANTITY,"
				+ " VC_REP.SOLD_AMOUNT    AS ITEM_SOLD_AMOUNT, VC_REP.VENDOR_PAYMENT_AMOUNT   AS VENDOR_PAYMENT_AMOUNT, VC_REP.CALCULATED_VENDOR_PAYMENT   AS CENTRAL_CALCULATED_VEND_PMT,"
				+ " VC_REP.CALCULATED_PRICE  AS CALCULATED_PRICE_RETAIL, NVL(VENDOR_ATTR.COST_THRESOLD_CAP,0)   AS COST_THRESOLD_CAP,VENDOR_ATTR.RECALCULATE_COST_CD  AS RECALCULATE_COST_CD,"
				+ " VEND_PROD.COST  AS VEND_COST,NVL(VEND_PROD.COST_TYPE,' ')   AS VEND_COST_TYPE,VEND_PROD.SHIPPING_COST  AS VEND_SHIPPING_COST, NVL(VEND_PROD.SHIPPING_COST_TYPE,' ')    AS SHIPPING_COST_TYPE"
				+ " FROM OM_PAY_ON_ORDER_VC_REP VC_REP,OM_VENDOR_ATTRIBUTE VENDOR_ATTR, OM_VENDOR_PRODUCT VEND_PROD WHERE VC_REP.STATUS_CD  = 'N' AND VC_REP.SYS_VENDOR_ID = VENDOR_ATTR.SYS_VENDOR_ID"
				+ " AND VENDOR_ATTR.SYS_VENDOR_ID = VEND_PROD.SYS_VENDOR_ID AND VEND_PROD.SYS_PRODUCT_ID  = VC_REP.SYS_PRODUCT_ID AND VC_REP.ORDER_PLACED_DTTM  >= sysdate - ?");
		return query;
	}
	
	
	public static StringBuilder updateOrderAttribute() {
		StringBuilder query=new StringBuilder();

		query.append("UPDATE OM_ORDER_ATTRIBUTE SET PAY_ON_FULFILLMENT_CD =1 , UPDATE_DTTM = SYSDATE  WHERE SYS_ORDER_ID = ?  AND TO_CHAR(ORDER_PLACED_DTTM ,'yyyy-mm-dd hh:mm:ss')  = ?");  // AND to_char(ORDER_PLACED_DTTM,'DD-MON-YY HH:MI:SS:FF') = ?
		return query;
	}
	public static StringBuilder updateOrderAttribute1() {
		StringBuilder query=new StringBuilder();

		query.append("UPDATE OM_ORDER_ATTRIBUTE SET PAY_ON_FULFILLMENT_CD =1  WHERE SYS_ORDER_ID = ? ");
		return query;
	}
	
	public static StringBuilder selectVendorEligibleQry() {
		StringBuilder query=new StringBuilder();

		query.append("SELECT COUNT(*) FROM OM_ORDER ODR JOIN OM_VENDOR VENDOR ON VENDOR.SYS_VENDOR_ID = ODR.SYS_FULFILLMENT_VENDOR_ID JOIN OM_VENDOR_ATTRIBUTE VENDOR_ATTR ON VENDOR.SYS_VENDOR_ID = VENDOR_ATTR.SYS_VENDOR_ID"
				+ " WHERE VENDOR.VENDOR_TYPE = 'FULFILLMENT' AND ODR.SYS_ORDER_ID = ? ");
		return query;
	}
	
	public static StringBuilder selectPOFItemData() {
		StringBuilder query=new StringBuilder();
		query.append("SELECT ODR_LINE.SYS_PRODUCT_ID  AS PRODUCT_ID, ODR_LINE.FULFILLMENT_VENDOR_COST  AS VENDOR_PAYMENT_AMOUNT, ODR_LINE.FINAL_PRICE AS CALCULATED_PRICE,"
				+ "ODR_LINE.QUANTITY  AS QUANTITY , ODR_LINE.LINE_SOLD_AMOUNT  AS ITEM_SOLD_AMOUNT, TO_CHAR(ODR_LINE.ORDER_PLACED_DTTM ,'yyyy-mm-dd hh:mm:ss') AS ORDER_PLACED_DTTM  "
				+ " FROM OM_ORDER ORD JOIN OM_ORDER_LINE ODR_LINE ON ODR_LINE.SYS_ORDER_ID =  ORD.SYS_ORDER_ID WHERE ORD.SYS_ORDER_ID =? "
				+ " AND ORD.ORDER_PLACED_DTTM = ODR_LINE.ORDER_PLACED_DTTM ");
		return query;
	}

	
	public static StringBuilder insertOrderVCRep() {
		StringBuilder query=new StringBuilder();
		query.append("INSERT INTO OM_PAY_ON_ORDER_VC_REP (SYS_PAY_ON_ORDER_VC_ID,SYS_LOCATION_ID,ORDER_NBR,ENVELOPE_NBR,SYS_PRODUCT_ID,EDI_UPC,QUANTITY,SOLD_AMOUNT,SYS_VENDOR_ID,ASN_RECEIVED_DTTM,COMPLETED_DTTM,SOLD_DTTM,REPORTING_DTTM,"
				+ " VENDOR_PAYMENT_AMOUNT,CALCULATED_PRICE,CALCULATED_VENDOR_PAYMENT,PREV_VENDOR_PAYMENT_AMOUNT,STATUS_CD,EMAIL_SENT_CD,CREATE_USER_ID,CREATE_DTTM, UPDATE_USER_ID,UPDATE_DTTM,ORDER_PLACED_DTTM)  VALUES "
				+ " (OM_PAY_ON_ORDER_VC_REP_SEQ.NEXTVAL,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,SYSDATE,?)");
		return query;
	}
	
	public static StringBuilder insertOrderVCRep1() {
		StringBuilder query=new StringBuilder();
		query.append("INSERT INTO OM_PAY_ON_ORDER_VC_REP (SYS_PAY_ON_ORDER_VC_ID,LOCATION_ID,ORDER_ID,ENVELOPE_NUMBER,"
				+ "PRODUCT_ID,EDI_UPC,QUANTITY,VENDOR_ID,ASN_RECEIVED_DTTM,COMPLETED_DTTM,SOLD_DTTM,REPORTING_DTTM,"
			+ "VENDOR_PAYMENT_AMOUNT,CALCULATED_PRICE,STATUS_IND,EMAIL_SENT_IND,CREATE_USER_ID,CREATE_DTTM,"
			+ "UPDATE_USER_ID,UPDATE_DTTM,ORDER_PLACED_DTTM)  VALUES (OM_PAY_ON_ORDER_VC_REP_SEQ.NEXTVAL,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
		return query;
	}

	public static StringBuilder selectOrderVCRep() {
		StringBuilder query=new StringBuilder();
		query.append("SELECT * FROM OM_PAY_ON_ORDER_VC_REP WHERE STATUS_CD = 'N' ");
		return query;
	}
	
	public static StringBuilder selectVendor(){
		StringBuilder query=new StringBuilder();
		query.append("SELECT * FROM OM_VENDOR_ATTRIBUTE WHERE SYS_VENDOR_ID = ?");
		return query;
		
	}
	
	public static StringBuilder updateOrderVCRepForVendorPayment(){
		StringBuilder query=new StringBuilder();
		query.append("UPDATE OM_PAY_ON_ORDER_VC_REP SET STATUS_CD = ? , CALCULATED_VENDOR_PAYMENT = ? ,EMAIL_SENT_CD = ?  WHERE SYS_PAY_ON_ORDER_VC_ID = ? AND TO_CHAR(ORDER_PLACED_DTTM ,'yyyy-mm-dd hh:mm:ss')  = ?");
		return query;
	}
	
	public static StringBuilder insertOrderVCAudit(){
		StringBuilder query=new StringBuilder();
		query.append("INSERT INTO OM_PAY_ON_ORDER_VC_AUDIT (SYS_PAY_ON_ORDER_VC_AUDIT_ID,SYS_PAY_ON_ORDER_VC_ID,CREATE_USER_ID,CREATE_DTTM,"
				+ "UPDATE_USER_ID,UPDATE_DTTM,ORDER_PLACED_DTTM) VALUES (OM_PAY_ON_ORDER_VC_AUDIT_SEQ.NEXTVAL,?,?,SYSDATE,?,SYSDATE,?) ");
		return query;
	}
	
	public static StringBuilder deleteOrderVCAudit(){
		StringBuilder query=new StringBuilder();
		query.append("DELETE FROM OM_PAY_ON_ORDER_VC_AUDIT WHERE SYS_PAY_ON_ORDER_VC_ID  NOT IN (SELECT   SYS_PAY_ON_ORDER_VC_ID FROM   OM_PAY_ON_ORDER_VC_REP WHERE STATUS_CD = 'V')");
		return query;
	}
	
	public static StringBuilder updateOrderVCRepForUserPayment(){
		StringBuilder query=new StringBuilder();
		query.append("Update OM_PAY_ON_ORDER_VC_REP set STATUS_CD = 'D' where STATUS_CD = 'A'");
		return query;
	}
	
	
	public static StringBuilder updateOrderVCRepForDatFile(){
		StringBuilder query=new StringBuilder();
		query.append("Update Om_Pay_On_Order_Vc_Rep set Status_Cd = ?, UPDATE_USER_ID='System', UPDATE_DTTM = Sysdate  where Status_Cd  = 'D' ");
		return query;
	}
	
	public static StringBuilder updateOrderVCRepForIrsFile(){
		StringBuilder query=new StringBuilder();
		query.append("Update Om_Pay_On_Order_Vc_Rep set Status_Cd     = ? , EDI_TRANSFER_DATE= sysdate, UPDATE_USER_ID='System', UPDATE_DTTM=Sysdate  where Status_Cd  = 'I'");
		return query;
	}
	
	public static StringBuilder selectEmail(){
		StringBuilder query=new StringBuilder();
		//query.append("SELECT SYS_REPORT_EMAIL_CONFIG_ID,SYS_REPORT_ID, CONFIG_NAME,EMAIL_ID,ACTIVE_CD from OM_REPORT_EMAIL_CONFIG ");
		query.append("SELECT REPORT_EMAIL_CONFIG.SYS_REPORT_EMAIL_CONFIG_ID AS EMAIL_CONFIG_ID, REPORT_EMAIL_CONFIG.SYS_REPORT_ID AS REPORT_ID, "
				+ "REPORT_EMAIL_CONFIG.CONFIG_NAME CONFIG_NAME,REPORT_EMAIL_CONFIG.EMAIL_ID AS EMAIL_ID,REPORT_EMAIL_CONFIG.EMAIL_TYPE AS EMAIL_TYPE,"
				+ "REPORT_EMAIL_CONFIG.ACTIVE_CD  AS ACTIVE_CD FROM OM_REPORT_EMAIL_CONFIG  REPORT_EMAIL_CONFIG,OM_REPORT REPORT WHERE REPORT.SYS_REPORT_ID = REPORT_EMAIL_CONFIG.SYS_REPORT_ID"
				+ " AND REPORT.REPORT_NAME = 'PayOnFulFillmentReport'");
		return query;
	}
}


