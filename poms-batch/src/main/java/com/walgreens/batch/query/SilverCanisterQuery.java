package com.walgreens.batch.query;
/**
 * Query file for transaction ,Insertion and updation of data w.r.t SilverCanisterReport
 * @author CTS
 *
 */
public class SilverCanisterQuery {
	/**
	 * This query populates data in the SilverCanisterDataBean
	 * @return query
	 */
	public static StringBuilder populateSilvCanDBQuery(){
		StringBuilder query=new StringBuilder();
		query.append("SELECT ORDER_NBR,SERVICE_CATEGORY_CODE,SYS_ORDER_ID,SYS_PRODUCT_ID,SYS_PRODUCT_DIMENSION_ID,LENGTH,WIDTH,SYS_MACHINE_INSTANCE_ID,SYS_MACHINE_TYPE_ID, ");
		query.append(" CALCULATED_PRINTS_FACTOR * RECALCULATED_PRINT_FACTOR AS TOTAL_PRINTS_FACTOR,WASTED_QTY,ROLL_FACTOR,ROLL_COUNT,PRINT_COUNT, ");
		query.append(" PRINT_COUNT * LENGTH * WIDTH  AS PRINT_IN_SQ_INCHES ,CALCULATED_ROLLS_FACTOR  * ROLL_COUNT AS SILVER_RECV_ROLLS, ");
		query.append(" CALCULATED_PRINTS_FACTOR * PRINT_COUNT * LENGTH * WIDTH AS SILVER_RECV_PRINTS, 'PROC' AS CANISTER_STATUS,LOCATION_NBR,LOCATION_TYPE,CANISTER_CALC_DATE,ROW_NO ");
		query.append(" FROM (SELECT OM_ORDR.ORDER_NBR,OM_ORDER_ATTR.SERVICE_CATEGORY_CODE,OM_ORDER_ATTR.SYS_ORDER_ID,OM_ORDR_LINE.SYS_PRODUCT_ID,OM_PROD.SYS_PRODUCT_DIMENSION_ID, ");
		query.append(" OM_PROD_DIM.LENGTH,OM_PROD_DIM.WIDTH,OM_MAC_INST.SYS_MACHINE_INSTANCE_ID,OM_MAC_TYPE.SYS_MACHINE_TYPE_ID, ");
		query.append(" CASE WHEN OM_ORDR.STATUS ='DONE' OR OM_ORDR.STATUS = 'SOLD' THEN CASE WHEN OM_ORDER_ATTR.SERVICE_CATEGORY_CODE ='ROL' THEN OM_MAC_TYPE.ROLL_FACTOR * OM_ORDER_LINE_ATTR.ROLLS_SETS_QTY END WHEN OM_ORDR.STATUS = 'CANCELLED' THEN CASE WHEN OM_ORDER_ATTR.SERVICE_CATEGORY_CODE ='ROL' THEN OM_ORDER_LINE_ATTR.WASTED_QTY END END AS CALCULATED_ROLLS_FACTOR, ");
		query.append(" CASE WHEN OM_ORDR.STATUS ='DONE' OR OM_ORDR.STATUS  = 'SOLD' THEN CASE WHEN OM_ORDER_ATTR.SERVICE_CATEGORY_CODE <> 'ROL' THEN OM_MAC_TYPE.PRINT_FACTOR * OM_ORDER_LINE_ATTR.PRINTED_QTY END WHEN OM_ORDR.STATUS = 'CANCELLED' THEN  CASE WHEN OM_ORDER_ATTR.SERVICE_CATEGORY_CODE <> 'ROL' THEN OM_ORDER_LINE_ATTR.WASTED_QTY END END AS CALCULATED_PRINTS_FACTOR , ");
		query.append(" CASE WHEN OM_ORDER_ATTR.EXCEPTION_CD = 1 THEN OM_ORDER_LINE_ATTR.WASTED_QTY * OM_MAC_TYPE.PRINT_FACTOR END AS RECALCULATED_PRINT_FACTOR, ");
		query.append(" OM_ORDER_LINE_ATTR.WASTED_QTY,OM_MAC_TYPE.ROLL_FACTOR,OM_ORDER_LINE_ATTR.ROLLS_SETS_QTY AS ROLL_COUNT, ");
		query.append(" CASE WHEN OM_ORDR.STATUS ='DONE' THEN OM_ORDER_LINE_ATTR.PANOROMIC_PRINT_QTY+OM_ORDER_LINE_ATTR.INDEX_SHEET_QTY+OM_ORDER_LINE_ATTR.PRINTED_QTY+OM_ORDER_LINE_ATTR.WASTED_QTY WHEN OM_ORDR.STATUS = 'CANCELLED' THEN OM_ORDER_LINE_ATTR.PANOROMIC_PRINT_QTY+OM_ORDER_LINE_ATTR.INDEX_SHEET_QTY+OM_ORDER_LINE_ATTR.WASTED_QTY END AS PRINT_COUNT, ");
		query.append(" OM_MAC_TYPE.PRINT_FACTOR,OM_ORDER_LINE_ATTR.PRINTED_QTY,OM_LOC.LOCATION_NBR,OM_LOC.LOCATION_TYPE,OM_ORDR.ORDER_COMPLETED_DTTM AS CANISTER_CALC_DATE,ROWNUM AS ROW_NO ");
		query.append(" FROM OM_ORDER_ATTRIBUTE OM_ORDER_ATTR JOIN OM_ORDER OM_ORDR ON OM_ORDER_ATTR.SYS_ORDER_ID=OM_ORDR.SYS_ORDER_ID ");
		query.append(" JOIN OM_ORDER_LINE OM_ORDR_LINE ON OM_ORDER_ATTR.SYS_ORDER_ID=OM_ORDR_LINE.SYS_ORDER_ID  ");
		query.append(" JOIN OM_PRODUCT OM_PROD ON OM_PROD.SYS_PRODUCT_ID=OM_ORDR_LINE.SYS_PRODUCT_ID ");
		query.append(" JOIN OM_PRODUCT_DIMENSIONS OM_PROD_DIM ON OM_PROD_DIM.SYS_DIMENSION_ID=OM_PROD.SYS_PRODUCT_DIMENSION_ID ");
		query.append(" JOIN OM_MACHINE_INSTANCE OM_MAC_INST ON OM_MAC_INST.SYS_MACHINE_INSTANCE_ID=OM_ORDR_LINE.SYS_MACHINE_INSTANCE_ID ");
		query.append(" JOIN OM_MACHINE_TYPE OM_MAC_TYPE ON OM_MAC_INST.SYS_MACHINE_TYPE_ID=OM_MAC_TYPE.SYS_MACHINE_TYPE_ID ");
		query.append(" JOIN OM_ORDER_LINE_ATTRIBUTE OM_ORDER_LINE_ATTR ON OM_ORDR_LINE.SYS_ORDER_LINE_ID =OM_ORDER_LINE_ATTR.SYS_ORDER_LINE_ID ");
		query.append(" JOIN OM_LOCATION OM_LOC ON OM_LOC.SYS_LOCATION_ID = OM_ORDR.SYS_OWNING_LOC_ID ");
		query.append(" AND OM_ORDER_ATTR.PROCESSING_TYPE_CD ='H' AND OM_ORDR.STATUS <> 'PROC' AND OM_LOC.ACTIVE_CD = 1 AND OM_MAC_TYPE.PAPER_SUPPORTED_CD = 1 AND OM_ORDER_ATTR.SILVER_RECOVERY_CD IS NULL ");
		query.append(" AND OM_ORDR.ORDER_PLACED_DTTM=OM_ORDER_ATTR.ORDER_PLACED_DTTM ");
		query.append(" AND OM_ORDR.ORDER_PLACED_DTTM=OM_ORDR_LINE.ORDER_PLACED_DTTM ");
		query.append(" AND OM_ORDR.ORDER_PLACED_DTTM=OM_ORDER_LINE_ATTR.ORDER_PLACED_DTTM ");
		query.append(" ) WHERE ROW_NO>= ? AND ROW_NO<=? ORDER BY ROW_NO ");
		
		/*query.append("SELECT ORDER_NBR,SERVICE_CATEGORY_CODE,SYS_ORDER_ID,SYS_PRODUCT_ID,SYS_PRODUCT_DIMENSION_ID,LENGTH,WIDTH,SYS_MACHINE_INSTANCE_ID,SYS_MACHINE_TYPE_ID,CALCULATED_PRINTS_FACTOR * RECALCULATED_PRINT_FACTOR AS TOTAL_PRINTS_FACTOR,WASTED_QTY,ROLL_FACTOR,ROLL_COUNT,PRINT_COUNT,PRINT_COUNT * LENGTH * WIDTH  AS PRINT_IN_SQ_INCHES ,CALCULATED_ROLLS_FACTOR * ROLL_COUNT  AS SILVER_RECV_ROLLS,CALCULATED_PRINTS_FACTOR * PRINT_COUNT * LENGTH * WIDTH AS SILVER_RECV_PRINTS,'PROC'  AS CANISTER_STATUS,LOCATION_NBR,LOCATION_TYPE,CANISTER_CALC_DATE, ROW_NO");
		query.append(" FROM (SELECT OM_ORDR.ORDER_NBR,OM_ORDER_ATTR.SERVICE_CATEGORY_CODE,OM_ORDER_ATTR.SYS_ORDER_ID,OM_ORDR_LINE.SYS_PRODUCT_ID,OM_PROD.SYS_PRODUCT_DIMENSION_ID,OM_PROD_DIM.LENGTH,OM_PROD_DIM.WIDTH,OM_MAC_INST.SYS_MACHINE_INSTANCE_ID,OM_MAC_TYPE.SYS_MACHINE_TYPE_ID,CASE WHEN OM_ORDR.STATUS ='DONE' OR OM_ORDR.STATUS   = 'SOLD' THEN CASE WHEN OM_ORDER_ATTR.SERVICE_CATEGORY_CODE IN ('R') THEN OM_MAC_TYPE.ROLL_FACTOR * OM_ORDER_LINE_ATTR.ROLLS_SETS_QTY END WHEN OM_ORDR.STATUS = 'CANCELLED' THEN OM_ORDER_LINE_ATTR.WASTED_QTY END AS CALCULATED_ROLLS_FACTOR, CASE WHEN OM_ORDR.STATUS ='DONE' OR OM_ORDR.STATUS   = 'SOLD' THEN CASE WHEN OM_ORDER_ATTR.SERVICE_CATEGORY_CODE IN ('P')THEN OM_MAC_TYPE.PRINT_FACTOR * OM_ORDER_LINE_ATTR.PRINTED_QTY END WHEN OM_ORDR.STATUS = 'CANCELLED' THEN OM_ORDER_LINE_ATTR.WASTED_QTY END AS CALCULATED_PRINTS_FACTOR ,CASE WHEN OM_ORDER_ATTR.EXCEPTION_CD IN (1) THEN OM_ORDER_LINE_ATTR.WASTED_QTY * OM_MAC_TYPE.PRINT_FACTOR END AS RECALCULATED_PRINT_FACTOR, ");
		query.append(" OM_ORDER_LINE_ATTR.WASTED_QTY,OM_MAC_TYPE.ROLL_FACTOR,OM_ORDER_LINE_ATTR.ROLLS_SETS_QTY AS ROLL_COUNT,CASE WHEN OM_ORDR.STATUS ='DONE' THEN OM_ORDER_LINE_ATTR.PANOROMIC_PRINT_QTY+OM_ORDER_LINE_ATTR.INDEX_SHEET_QTY+OM_ORDER_LINE_ATTR.PRINTED_QTY+OM_ORDER_LINE_ATTR.WASTED_QTY WHEN OM_ORDR.STATUS = 'CANCELLED' THEN OM_ORDER_LINE_ATTR.PANOROMIC_PRINT_QTY+OM_ORDER_LINE_ATTR.INDEX_SHEET_QTY+OM_ORDER_LINE_ATTR.WASTED_QTY END AS PRINT_COUNT, OM_MAC_TYPE.PRINT_FACTOR, OM_ORDER_LINE_ATTR.PRINTED_QTY,OM_LOC.LOCATION_NBR,OM_LOC.LOCATION_TYPE,OM_ORDR.ORDER_COMPLETED_DTTM AS CANISTER_CALC_DATE, ");
		query.append(" ROWNUM AS ROW_NO ");
		query.append(" FROM OM_ORDER_ATTRIBUTE OM_ORDER_ATTR JOIN OM_ORDER OM_ORDR ON OM_ORDER_ATTR.SYS_ORDER_ID=OM_ORDR.SYS_ORDER_ID JOIN OM_ORDER_LINE OM_ORDR_LINE ON OM_ORDER_ATTR.SYS_ORDER_ID=OM_ORDR_LINE.SYS_ORDER_ID JOIN OM_PRODUCT OM_PROD ON OM_PROD.SYS_PRODUCT_ID=OM_ORDR_LINE.SYS_PRODUCT_ID JOIN OM_PRODUCT_DIMENSIONS OM_PROD_DIM ON OM_PROD_DIM.SYS_DIMENSION_ID=OM_PROD.SYS_PRODUCT_DIMENSION_ID JOIN OM_MACHINE_INSTANCE OM_MAC_INST ON OM_MAC_INST.SYS_MACHINE_INSTANCE_ID=OM_ORDR_LINE.SYS_MACHINE_INSTANCE_ID JOIN OM_MACHINE_TYPE OM_MAC_TYPE ON OM_MAC_INST.SYS_MACHINE_TYPE_ID=OM_MAC_TYPE.SYS_MACHINE_TYPE_ID JOIN OM_ORDER_LINE_ATTRIBUTE OM_ORDER_LINE_ATTR ON OM_ORDR_LINE.SYS_ORDER_LINE_ID =OM_ORDER_LINE_ATTR.SYS_ORDER_LINE_ID JOIN OM_LOCATION OM_LOC ON OM_LOC.SYS_LOCATION_ID = OM_ORDR.SYS_OWNING_LOC_ID AND OM_ORDER_ATTR.PROCESSING_TYPE_CD IN ('H') AND OM_ORDR.STATUS NOT IN ('PROC') AND OM_LOC.ACTIVE_CD=1 AND OM_ORDER_ATTR.SILVER_RECOVERY_CD IS NULL ) WHERE ROW_NO BETWEEN ? AND ? ORDER BY ROW_NO");
	*/	return query;
		
	}
	/**
	 * This query Inserts data in OM_SILVER_RECOVERY_DETAIL table
	 * @return query
	 */
	
	public static StringBuilder queryInsertIntoSilvRecDetail(){
		StringBuilder query=new StringBuilder();
		query.append("INSERT INTO OM_SILVER_RECOVERY_DETAIL ");
		query.append(" (SYS_SILVER_RECOVERY_DETAIL_ID,SYS_LOCATION_ID,SILVER_CALC_DTTM,ROLLS_COUNT,PRINTS_COUNT,PRINTS_IN_SQ_INCH,SILVER_RECV_ROLLS,SILVER_RECV_PRINTS,TRANSFER_CD,CREATE_USER_ID,CREATE_DTTM,UPDATE_USER_ID,UPDATE_DTTM) ");
		query.append(" VALUES (OM_SILVER_RECOVERY_DETAIL_SEQ.NEXTVAL,?,?,?,?,?,?,?,1,?,SYSDATE,?,SYSDATE)");
		return query;
		
	}
    /**
     * This query inserts data in OM_SILVER_RECOVERY_HEADER table
     * @return query
     */
	public static StringBuilder queryInsertIntoSilvRecHeader(){
		StringBuilder query=new StringBuilder();
		query.append("INSERT INTO OM_SILVER_RECOVERY_HEADER ");
		query.append(" (SYS_SILVER_RECOVERY_HEADER_ID,SYS_LOCATION_ID,CANISTER_START_DTTM, CANISTER_END_DTTM ,CANISTER_STATUS,ROLLS_COUNT, ");
		query.append(" PRINTS_COUNT,PRINTS_IN_SQ_INCH,SILVER_RECV_ROLLS,SILVER_RECV_PRINTS,CREATE_USER_ID, ");
		query.append("  CREATE_DTTM,UPDATE_USER_ID,UPDATE_DTTM) ");
		query.append(" VALUES  (OM_SILVER_RECOVERY_HEADER_SEQ.NEXTVAL,?,?,SYSDATE,?,?,?,?,?,?,'SYSTEM',SYSDATE,'SYSTEM',SYSDATE)");
		return query;
	}
	/**
	 * This query updates data in OM_SILVER_RECOVERY_HEADER table
	 * @return query
	 */
	public static StringBuilder queryUpdateSilvRecHeader(){
		StringBuilder query=new StringBuilder();
		query.append("UPDATE OM_SILVER_RECOVERY_HEADER ");
		query.append("SET CANISTER_START_DTTM = SYSDATE, SILVER_RECV_ROLLS=SILVER_RECV_ROLLS+?,SILVER_RECV_PRINTS=SILVER_RECV_PRINTS+?");
		query.append("WHERE SYS_LOCATION_ID=?");		
		return query;
	}
	
}
